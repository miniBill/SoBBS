<Type Name="Application" FullName="Mono.Terminal.Application">
  <TypeSignature Language="C#" Value="public class Application" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Application extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>mono-curses</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            gui.cs Application driver.
            </summary>
    <remarks>
            Before using gui.cs, you must call Application.Init, then
            you would create your toplevel container (typically by
            calling:  new Container (0, 0, Application.Cols,
            Application.Lines), adding widgets to it and finally
            calling Application.Run on the toplevel container.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Application ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public static Mono.Terminal.RunState Begin (Mono.Terminal.Container container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.Terminal.RunState Begin(class Mono.Terminal.Container container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Terminal.RunState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Mono.Terminal.Container" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>
            Starts running a new container or dialog box.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Use this method if you want to start the dialog, but
            you want to control the main loop execution manually
            by calling the RunLoop method (for example, to start
            the dialog, but continuing to process events).
            Use the returned value as the argument to RunLoop
            and later to the End method to remove the container
            from the screen.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorBasic">
      <MemberSignature Language="C#" Value="public static int ColorBasic;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorBasic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The basic color of the terminal.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorDialogFocus">
      <MemberSignature Language="C#" Value="public static int ColorDialogFocus;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorDialogFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color for focused widgets on a dialog.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorDialogHotFocus">
      <MemberSignature Language="C#" Value="public static int ColorDialogHotFocus;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorDialogHotFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color for a hotkey in a focused widget on a dialog.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorDialogHotNormal">
      <MemberSignature Language="C#" Value="public static int ColorDialogHotNormal;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorDialogHotNormal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color for hotkeys in an unfocused widget on a dialog.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorDialogNormal">
      <MemberSignature Language="C#" Value="public static int ColorDialogNormal;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorDialogNormal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color for unfocused widgets on a dialog.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorError">
      <MemberSignature Language="C#" Value="public static int ColorError;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color used for error text.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorErrorFocus">
      <MemberSignature Language="C#" Value="public static int ColorErrorFocus;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorErrorFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color used for focused widgets on an error dialog.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorErrorHot">
      <MemberSignature Language="C#" Value="public static int ColorErrorHot;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorErrorHot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color used for hotkeys in error dialogs
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorErrorHotFocus">
      <MemberSignature Language="C#" Value="public static int ColorErrorHotFocus;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorErrorHotFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color used for hotkeys in a focused widget in an error dialog
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorFocus">
      <MemberSignature Language="C#" Value="public static int ColorFocus;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color used for focused widgets.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorHotFocus">
      <MemberSignature Language="C#" Value="public static int ColorHotFocus;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorHotFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color used for hotkeys in focused widgets.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorHotNormal">
      <MemberSignature Language="C#" Value="public static int ColorHotNormal;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorHotNormal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color used for hotkeys in unfocused widgets.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorMarked">
      <MemberSignature Language="C#" Value="public static int ColorMarked;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorMarked" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color used for marked entries.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorMarkedSelected">
      <MemberSignature Language="C#" Value="public static int ColorMarkedSelected;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorMarkedSelected" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color used for marked entries that are currently
            selected with the cursor.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorMenu">
      <MemberSignature Language="C#" Value="public static int ColorMenu;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorMenu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The regular color for a menu entry
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorMenuHot">
      <MemberSignature Language="C#" Value="public static int ColorMenuHot;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorMenuHot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The hot color for a menu entry
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorMenuHotSelected">
      <MemberSignature Language="C#" Value="public static int ColorMenuHotSelected;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorMenuHotSelected" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The hot color for a selected item on a menu
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorMenuSelected">
      <MemberSignature Language="C#" Value="public static int ColorMenuSelected;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorMenuSelected" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The regular color for a selected item on a menu
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorNormal">
      <MemberSignature Language="C#" Value="public static int ColorNormal;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 ColorNormal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Color used for unfocused widgets.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cols">
      <MemberSignature Language="C#" Value="public static int Cols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Cols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of columns on the screen
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyContainer">
      <MemberSignature Language="C#" Value="public static Mono.Terminal.Container EmptyContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Mono.Terminal.Container EmptyContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Terminal.Container</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The singleton EmptyContainer that covers the entire screen.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public static void End (Mono.Terminal.RunState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void End(class Mono.Terminal.RunState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Mono.Terminal.RunState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>
            Use this method to complete an execution started with Begin
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public static void Error (string caption, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Error(string caption, string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="caption">To be added.</param>
        <param name="text">To be added.</param>
        <summary>
            Displays an error message.
            </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public static void Error (string caption, string format, object[] pars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Error(string caption, string format, object[] pars) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="pars" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="caption">To be added.</param>
        <param name="format">To be added.</param>
        <param name="pars">To be added.</param>
        <summary>
            Displays an error message.
            </summary>
        <remarks>
            Overload that allows for String.Format parameters.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public static void Info (string caption, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Info(string caption, string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="caption">To be added.</param>
        <param name="text">To be added.</param>
        <summary>
            Displays an informational message.
            </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public static void Info (string caption, string format, object[] pars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Info(string caption, string format, object[] pars) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="pars" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="caption">To be added.</param>
        <param name="format">To be added.</param>
        <param name="pars">To be added.</param>
        <summary>
            Displays an informational message.
            </summary>
        <remarks>
            Overload that allows for String.Format parameters.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public static void Init (bool disable_color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Init(bool disable_color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disable_color" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disable_color">To be added.</param>
        <summary>
            Initializes the runtime.   The boolean flag
            indicates whether we are forcing color to be off.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Iteration">
      <MemberSignature Language="C#" Value="public static event EventHandler Iteration;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Iteration" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This event is raised on each iteration of the
            main loop.
            </summary>
        <remarks>
            See also <see cref="!:Timeout" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public static int Lines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Lines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of lines on the screen
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MainLoop">
      <MemberSignature Language="C#" Value="public static Mono.Terminal.MainLoop MainLoop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Mono.Terminal.MainLoop MainLoop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Terminal.MainLoop</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeColor">
      <MemberSignature Language="C#" Value="public static int MakeColor (short f, short b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MakeColor(int16 f, int16 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Int16" />
        <Parameter Name="b" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <param name="b">To be added.</param>
        <summary>
            Creates a new Curses color to be used by Gui.cs apps
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEventsAvailable">
      <MemberSignature Language="C#" Value="public static Mono.Terminal.Curses.Event MouseEventsAvailable;" />
      <MemberSignature Language="ILAsm" Value=".field public static valuetype Mono.Terminal.Curses/Event MouseEventsAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Terminal.Curses+Event</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A flag indicating which mouse events are available
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Msg">
      <MemberSignature Language="C#" Value="public static void Msg (bool error, string caption, string t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Msg(bool error, string caption, string t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Boolean" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="t" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <param name="caption">To be added.</param>
        <param name="t">To be added.</param>
        <summary>
            Displays a message on a modal dialog box.
            </summary>
        <remarks>
            The error boolean indicates whether this is an
            error message box or not.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Forces a repaint of the screen.
            </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (Mono.Terminal.Container container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class Mono.Terminal.Container container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Mono.Terminal.Container" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>
            Runs the main loop on the given container.
            </summary>
        <remarks>
            This method is used to start processing events
            for the main application, but it is also used to
            run modal dialog boxes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunLoop">
      <MemberSignature Language="C#" Value="public static void RunLoop (Mono.Terminal.RunState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunLoop(class Mono.Terminal.RunState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Mono.Terminal.RunState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>
            Runs the main loop for the created dialog
            </summary>
        <remarks>
            Calling this method will block until the
            dialog has completed execution.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunLoop">
      <MemberSignature Language="C#" Value="public static void RunLoop (Mono.Terminal.RunState state, bool wait);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunLoop(class Mono.Terminal.RunState state, bool wait) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Mono.Terminal.RunState" />
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <param name="wait">To be added.</param>
        <summary>
            Runs the main loop for the created dialog
            </summary>
        <remarks>
            Use the wait parameter to control whether this is a
            blocking or non-blocking call.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Stop() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public static int Timeout;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 Timeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The time before we timeout on a curses call.
            </summary>
        <remarks>
            This is needed for applications that need to
            poll or update other bits of information at
            specified intervals.
            <para>The default value -1, means to wait until
            an event is ready.   If the value is zero, then
            events are only processed if they are available,
            otherwise it is timeout in milliseconds to wait
            for an event to arrive before running an
            iteration on the main loop.   See <see cref="E:Mono.Terminal.Application.Iteration" />.</para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingColor">
      <MemberSignature Language="C#" Value="public static bool UsingColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UsingColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
